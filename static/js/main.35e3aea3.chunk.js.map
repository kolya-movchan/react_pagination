{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageItems","slice","pagesTotal","Math","ceil","length","disablePrevPage","disableNextPage","className","href","onClick","event","map","page","item","items","App","useState","setPerPage","setCurrentPage","visibleItems","startItemsCount","endItemsCount","id","value","onChange","target","handlePerPage","htmlFor","textContent","currentTarget","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYJ,EAAMK,OACrBH,EAAc,GAAKD,EAASC,EAAcD,GAGvCK,EAAab,EAAW,EAAGc,KAAKC,KAAKR,EAAMS,OAASR,IAEpDS,EAAkC,IAAhBR,EAClBS,EAAkBT,IAAgBI,EAAWA,EAAWG,OAAS,GAEvE,OACE,qCACE,qBAAIG,UAAU,aAAd,UACE,oBACEA,UACEF,EACI,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QAAS,SAACC,GACRZ,EAAaY,IANjB,oBAaDT,EAAWU,KAAI,SAAAC,GAAI,OAClB,oBACEL,UACEV,IAAgBe,EACZ,mBACA,YAJR,SAQE,mBACE,UAAQ,WACRL,UAAU,YACVC,KAAI,WAAMI,GACVH,QAAS,SAACC,GACRZ,EAAaY,IALjB,SAQGE,KAVEA,MAeT,oBACEL,UACED,EACI,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAAeF,EACfG,QAAS,SAACC,GACRZ,EAAaY,IANjB,uBAaJ,6BACGX,EAAUY,KAAI,SAAAE,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvF5BC,EAAQ1B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBqB,EAApB,KAEMC,EAAevB,EAAUC,EACzBuB,GAAoBvB,EAAc,GAAKD,EAAW,EAClDyB,EAAkBF,EAAeL,EAAMV,OAEzCU,EAAMV,OADNe,EAsCJ,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiCuB,EADjC,cACsDC,EADtD,aAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAO3B,EACP4B,SAAU,SAACd,IAlDC,SAACA,GACrBO,GAAYP,EAAMe,OAAOF,OACzBL,EAAe,GAiDLQ,CAAchB,IANlB,UASE,wBAAQa,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOmB,EACPlB,QAASA,EACTC,YAAaA,EACbC,aAjEmB,SACvBY,GAEA,IAAQkB,EAAgBlB,EAAMmB,cAAtBD,YAER,GAAIA,EACF,OAAQA,GACN,IAAK,OACH,GAAoB,IAAhB/B,EACF,OAGFqB,EAAerB,EAAc,GAC7B,MAEF,IAAK,OACH,GAAIA,IAAgBK,KAAKC,KAAKW,EAAMV,OAASR,GAC3C,OAGFsB,EAAerB,EAAc,GAC7B,MAEF,QACEqB,GAAgBU,WC7C1BE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.35e3aea3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ntype Props = {\n  total: string[],\n  perPage: number,\n  currentPage: number,\n  onPageChange: (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageItems = total.slice(\n    (currentPage - 1) * perPage, currentPage * perPage,\n  );\n\n  const pagesTotal = getNumbers(1, Math.ceil(total.length / perPage));\n\n  const disablePrevPage = currentPage === 1;\n  const disableNextPage = currentPage === pagesTotal[pagesTotal.length - 1];\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={\n            disablePrevPage\n              ? 'page-item disabled'\n              : 'page-item'\n          }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={disablePrevPage}\n            onClick={(event) => {\n              onPageChange(event);\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pagesTotal.map(page => (\n          <li\n            className={\n              currentPage === page\n                ? 'page-item active'\n                : 'page-item'\n            }\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={(event) => {\n                onPageChange(event);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={\n            disableNextPage\n              ? 'page-item disabled'\n              : 'page-item'\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={disableNextPage}\n            onClick={(event) => {\n              onPageChange(event);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {pageItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const visibleItems = perPage * currentPage;\n  const startItemsCount = ((currentPage - 1) * perPage) + 1;\n  const endItemsCount = !(visibleItems > items.length)\n    ? visibleItems\n    : items.length;\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    const { textContent } = event.currentTarget;\n\n    if (textContent) {\n      switch (textContent) {\n        case '«':\n          if (currentPage === 1) {\n            return;\n          }\n\n          setCurrentPage(currentPage - 1);\n          break;\n\n        case '»':\n          if (currentPage === Math.ceil(items.length / perPage)) {\n            return;\n          }\n\n          setCurrentPage(currentPage + 1);\n          break;\n\n        default:\n          setCurrentPage(+textContent);\n          break;\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItemsCount} - ${endItemsCount} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              handlePerPage(event);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}